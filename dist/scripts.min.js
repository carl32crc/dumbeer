angular.module( 'dumbeer', [ 'ngRoute', 'controllers', 'config', 'ngStorage', 'services' ] )

angular.module( 'config', [] )
	
	.config( function( $routeProvider ){

			$routeProvider

				.when('/',{
					templateUrl: 'modules/age/age.html',
					controller: 'ageController'
				})
				.when('/home',{
					templateUrl: 'modules/home/home.html',
					controller: 'homeController'
				})
				.when('/specifications/id/:ID',{
					templateUrl: 'modules/details/spec.html',
					controller: 'specController',
				})
				.when('/specifications/id/:ID/bar/:BARNAME',{
					templateUrl: 'modules/details/spec.html',
					controller: 'specController'
				})
				.when('/myprofile',{
					templateUrl: 'modules/profile/profile.html',
					controller: 'historyController'
				})
				.otherwise({ redirectTo: '/' }); ;


	})
angular.module( 'controllers', ['profileModule','ageModule','specModule','homeModule'] )
	.run(function($localStorage, $location){
    if($localStorage.oldEnough === false || $localStorage.oldEnough === undefined ){
      $location.path( "/" );
    }
  })


angular.module( 'controllers' )
  
  .controller('myLocation', function($scope, $localStorage, $routeParams){ 

    $scope.storage = $localStorage;

    $scope.$on( 'habemusChekin', function (){
      console.log('hola?');
      var map;

      //Comprueba que el navegador tenga soporte para la geolocalizacion
      function getMyLocation() {

        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(displayLocation);
        } else {
          alert('Oops, no geolocation support');
        }
      }

      getMyLocation();

      //Guarda nuestra localizacion  actual,la almacena y muestra el mapa con nuestra posicion.
      function displayLocation(position) {
        var latitude = position.coords.latitude;
        var longitude = position.coords.longitude;

        var latLng = new google.maps.LatLng(latitude, longitude);
        console.log(latLng)
        showMap(latLng);

        addNearByPlaces(latLng);
        createMarker(latLng);

        //Muestra  nuestras coordenadas
        // var div = document.getElementById('location');
        // div.innerHTML = 'You are at Latitude: ' + latitude + ', Longitude: ' + longitude;
      }


      //Funcion para crear el  mapa
      function showMap(latLng) {
        //Configuracion del mapa
        var mapOptions = {
          center: latLng,
          zoom: 18,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
      }


      //Funcion para agregar sitios cercanos
      function addNearByPlaces(latLng) {

        var nearByService = new google.maps.places.PlacesService(map);

        var request = {
          location: latLng,
          radius: 100,
          types: ['bar', 'restaurant']
        };

        //nearByService.radarSearch(request, handleNearBySearchResults);
        nearByService.nearbySearch(request, handleNearBySearchResults);
        //nearByService.textSearch(request, handleNearBySearchResults);
      }

      //Funcion para incrementar los sitios que hemos predefinido en la funcion anterior
      function handleNearBySearchResults(results, status) {
        if (status == google.maps.places.PlacesServiceStatus.OK) {
          for (var i = 0; i < results.length; i++) {
            var place = results[i];
            createMarker(place.geometry.location, place);
          }
        }
      }

      //Funcion para crear los marcadores
      function createMarker(latLng, placeResult) {
        
        var image ='https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png';

        var markerOptionsMyFlag = {
          position: latLng,
          map: map,
          icon: image,
          animation: google.maps.Animation.DROP,
          clickable: true
        }
       
        if (placeResult) {
          var marker = new google.maps.Marker({position: latLng, map: map, animation: google.maps.Animation.DROP, clickable: true});
          var content = placeResult.name+'<br/>'+placeResult.vicinity + '<br><a href="/#/specifications/id/'+ $routeParams.ID +'/bar/' + encodeURIComponent(placeResult.name) + '">Get Location</a>';
          addInfoWindow(marker, latLng, content);
        }else {
          var marker = new google.maps.Marker(markerOptionsMyFlag);
          var content = 'You are here: ' + latLng.lat() + ', ' + latLng.lng();
          addInfoWindow(marker, latLng, content);
        }

      }

      //funcion para agregar la informacion en la ventana
      function addInfoWindow(marker, latLng, content) {
        var infoWindowOptions = {
          content: content,
          position: latLng
        };

        var infoWindow = new google.maps.InfoWindow(infoWindowOptions);

        google.maps.event.addListener(marker, 'click', function() {
          infoWindow.open(map);
        });
      }
    })
  })

angular.module('services',['specServices','homeService']);



angular.module('ageModule', [])
	.controller('ageController', function($scope, $localStorage, $location) {
		$scope.storage = $localStorage;    

		$scope.saveAge = function(){
			$scope.storage.oldEnough = true;
      $location.path( "/home" );
		}
    if($scope.storage.oldEnough === true){
      $location.path( "/home" );
    }
	})
angular.module( 'specModule', [] )


	.controller( 'specController' , function ( $scope, $localStorage, $routeParams, $location,  specServices) {

    $scope.storage = $localStorage; 
		$scope.resultDetailsBeer = "";
    var productId = $routeParams.ID;

    if($routeParams.BARNAME){
      var lastChekIn = $scope.storage.checkIn.pop();
      lastChekIn.location = $routeParams.BARNAME;
      $scope.storage.checkIn.push(lastChekIn);
        $location.path( "/myprofile" );
    }

		var imageNotFound  =  'http://www.mosaicdevelopmentfl.com/Common/images/jquery/galleria/image-not-found.png';
		$scope.imageNot = imageNotFound;

    specServices.getInfoBeer ( productId )
			.then( function( dataBeerDetail ) {
				$scope.resultDetailsBeer = dataBeerDetail.data;
			    console.log(dataBeerDetail.data);
          var beerId = dataBeerDetail.data.id;

          if($scope.storage.ratings !== undefined){
            if($scope.storage.ratings[beerId].rating !== undefined){
              var rating = $scope.storage.ratings[beerId].rating;
              $scope.selectedRating = rating;
            }
          }
			})
	})


	.controller('checkInController', function($scope, $localStorage, $location, $anchorScroll) {

    $scope.storage = $localStorage;        
    $scope.hasCheckedIn = false;
    $scope.$parent.showMap = false;

    $scope.checkIn = function(beer) {
      if($scope.hasCheckedIn === false){
        if($scope.storage.checkIn === undefined){
          $scope.storage.checkIn = [];
        }

        var date = new Date();
        var label = 'img/image-not-found.png';

        if(beer.labels !== undefined){
          label = beer.labels.medium;
        }

        var checkInObject = {
          beerId: beer.id,
          beerName: beer.name,
          date: date,
          label: label           
        }

        $scope.storage.checkIn.push(checkInObject)
        $scope.hasCheckedIn = true;
        $scope.$parent.showMap = true;

        $scope.$broadcast( 'habemusChekin' )

        // $location.hash('map')
        // $anchorScroll();
      }         
    }
  })

  
  .controller('ratingController', function($scope, $localStorage) {

    $scope.storage = $localStorage; 
    
    $scope.rate = function(beerObj){
      if($scope.storage.ratings === undefined){
        $scope.storage.ratings = {};
      }

      $scope.storage.ratings[beerObj.id] = {
        name: beerObj.name,
        rating: beerObj.rating
      }
    }
  })

  .controller('regLocationController', function ( $scope, $routeParams ) {

    $scope.name = $routeParams.BARNAME;
  })
angular.module('specServices', [])

	.factory('specServices', function($http) {

		var urlApiBeers = 'https://quiet-inlet-67115.herokuapp.com/api/beer/<ID-BEER>';

		function getInfoBeer ( idBeer ) {
			var url = urlApiBeers.replace('<ID-BEER>', idBeer)
			return $http.get(url);
		}

		return {
			getInfoBeer : getInfoBeer
		}

	})
	

angular.module( 'homeModule', [ ] )
 .controller('homeController', function($scope, $http, $localStorage,homeService){

		$scope.resultSearchedBeers = "";

    $scope.storage = $localStorage;
    
		//var urlApiBeers = 'https://quiet-inlet-67115.herokuapp.com/api/search/beers?q=';
		var imageNotFound = 'img/image-not-found.png';
		$scope.imageNot = imageNotFound;
		$scope.submit = function() {

    if ($scope.storage.searches === undefined) {
      $scope.storage.searches = []; }
      $scope.storage.searches.push({ beer : $scope.beerToSearch, url : 'https://quiet-inlet-67115.herokuapp.com/api/search/beers?q='+$scope.beerToSearch })

      homeService.getNameBeer( $scope.beerToSearch )
				.then( function( dataBeerSearched ) {
					$scope.resultSearchedBeers = dataBeerSearched.data;
					// console.log($scope.resultSearchedBeers);
				})
		}

    $scope.change = function() {
      var url = $scope.selectSearcher;
      $http.get( url )
        .then( function( dataBeerSearched ) {
          $scope.resultSearchedBeers = dataBeerSearched.data;
          // console.log($scope.resultSearchedBeers);
        })
    }

    $scope.advOpt = false;
    $scope.showOpt = function() {
      return ( $scope.advOpt = $scope.advOpt ? false : true )
    }
	})
angular.module('homeService',[])
	.factory('homeService', function ($http) {

		var urlApiBeers = 'https://quiet-inlet-67115.herokuapp.com/api/search/beers?q=<ID-BEER>';

		function getNameBeer ( nameBeer ) {
			var url  = urlApiBeers.replace('<ID-BEER>', nameBeer)
			return 	$http.get(url)
		}

		return {
			getNameBeer : getNameBeer
		}

})
angular.module( 'profileModule', [] )
  .controller('historyController', function($scope, $localStorage) {
    $scope.storage = $localStorage;         
  })
  .controller('getRatingController', function($scope, $localStorage){
    $scope.storage = $localStorage;
    // 
    $scope.rating = function(beerId){
      if($scope.storage.ratings[beerId] !== undefined){
        var beerRating = $scope.storage.ratings[beerId].rating;
        return new Array(parseInt(beerRating));
      }
    };
    // get inverse rating to display the "empty" stars
    $scope.ratingInv = function(beerId){
      if($scope.storage.ratings[beerId] !== undefined){
        var beerRating = $scope.storage.ratings[beerId].rating;
        return new Array(parseInt(5 - beerRating));  
      }      
    };
  })